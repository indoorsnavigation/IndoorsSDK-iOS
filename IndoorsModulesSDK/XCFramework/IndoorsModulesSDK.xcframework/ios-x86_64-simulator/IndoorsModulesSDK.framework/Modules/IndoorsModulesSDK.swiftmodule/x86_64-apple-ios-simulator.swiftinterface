// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target x86_64-apple-ios15.6-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Osize -enable-bare-slash-regex -module-name IndoorsModulesSDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Foundation
import IndoorsCoreSDK
import IndoorsMapSDK
@_exported import IndoorsModulesSDK
import StoreKit
import Swift
import IndoorsMapSDK.Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc public class HomeBuilder : ObjectiveC.NSObject {
  @objc public static func build(with building: IndoorsCoreSDK.INBuilding) -> IndoorsModulesSDK.HomeController
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency public class HomeController : UIKit.UIViewController {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension IndoorsModulesSDK.HomeController : UIKit.UICollectionViewDataSource, UIKit.UICollectionViewDelegateFlowLayout {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, numberOfItemsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, cellForItemAt indexPath: Foundation.IndexPath) -> UIKit.UICollectionViewCell
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, layout collectionViewLayout: UIKit.UICollectionViewLayout, sizeForItemAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGSize
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, didSelectItemAt indexPath: Foundation.IndexPath)
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, layout collectionViewLayout: UIKit.UICollectionViewLayout, insetForSectionAt section: Swift.Int) -> UIKit.UIEdgeInsets
}
@_inheritsConvenienceInitializers @objc public class INTasksRequestsBuildingsBuilder : ObjectiveC.NSObject {
  @objc public static func build(with buildings: [IndoorsCoreSDK.INBuilding]) -> IndoorsModulesSDK.INTasksRequestsBuildingsController
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency public class INTasksRequestsBuildingsController : UIKit.UIViewController {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension IndoorsModulesSDK.INTasksRequestsBuildingsController : UIKit.UICollectionViewDelegate, UIKit.UICollectionViewDataSource, UIKit.UICollectionViewDelegateFlowLayout {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, numberOfItemsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, cellForItemAt indexPath: Foundation.IndexPath) -> UIKit.UICollectionViewCell
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, layout collectionViewLayout: UIKit.UICollectionViewLayout, sizeForItemAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGSize
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, didSelectItemAt indexPath: Foundation.IndexPath)
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, layout collectionViewLayout: UIKit.UICollectionViewLayout, insetForSectionAt section: Swift.Int) -> UIKit.UIEdgeInsets
}
@_inheritsConvenienceInitializers @objc public class INTasksRequestsPlaceOnMapBuilder : ObjectiveC.NSObject {
  @objc public static func build(building: IndoorsCoreSDK.INBuilding, room: IndoorsCoreSDK.INRoom?, x: Swift.Double, y: Swift.Double, floorId: Swift.Double) -> UIKit.UIViewController
  @objc override dynamic public init()
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor @preconcurrency public class INTrackingGlobalMapView : IndoorsMapSDK.INGlobalMapView {
  @objc @_Concurrency.MainActor @preconcurrency public init(frame: CoreFoundation.CGRect, trackingService: IndoorsCoreSDK.INTrackingService)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func select(_ floor: IndoorsCoreSDK.INFloor)
  @objc deinit
}
extension IndoorsModulesSDK.INTrackingGlobalMapView : IndoorsCoreSDK.INTrackingObjectsManagerDelegate {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func isCurrentFloor(floorId: Foundation.NSNumber?) -> Swift.Bool
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func trackingObjectsManagerDidAdd(object: any IndoorsCoreSDK.INTrackedMapObject)
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func trackingObjectsManagerDidAddForAnotherFloor(object: any IndoorsCoreSDK.INTrackedMapObject)
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func trackingObjectsManagerDidUpdate(object: any IndoorsCoreSDK.INTrackedMapObject)
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func trackingObjectsManagerDidDelete(object: any IndoorsCoreSDK.INTrackedMapObject)
}
extension IndoorsModulesSDK.INTrackingGlobalMapView : IndoorsCoreSDK.INTrackingServiceDelegate {
}
@_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor @preconcurrency final public class INTrackingTabBarController : UIKit.UITabBarController, IndoorsMapSDK.INBaseMapViewDelegate {
  @objc @_Concurrency.MainActor @preconcurrency public init(currentBuilding: IndoorsCoreSDK.INBuilding)
  @_Concurrency.MainActor @preconcurrency @objc override final public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override final public func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency @objc override final public func viewDidDisappear(_ animated: Swift.Bool)
  @objc deinit
}
